{"version":3,"sources":["components/header/header.js","hooks/scroll.js","components/drawerMenu.js","App.js","serviceWorker.js","apollo-client.js","index.js","constants.js"],"names":["Header","styled","header","movil","down","color","prim","light","phanton","Logo","a","font","title","MenuButton","button","onDrawer","theme","useTheme","isMovil","useMediaQuery","breakpoints","scroll","useState","setDown","handleScroll","window","scrollY","useEffect","addEventListener","removeEventListener","useScroll","Container","maxWidth","Grid","container","justify","alignItems","item","Hidden","smUp","onClick","MenuContainer","div","Title","h2","SubTitle","p","SpicyLink","NoLink","span","nav","id","name","icon","withRouter","onClose","List","ListItem","IconButton","style","Divider","map","key","ListItemIcon","ListItemText","href","to","Loader","NProgress","start","done","Home","lazy","App","drawer","setDrawer","Drawer","anchor","open","fallback","exact","path","component","Boolean","location","hostname","match","client","ApolloClient","link","ApolloLink","from","onError","graphQLErrors","networkError","forEach","message","locations","console","log","createUploadLink","uri","cache","InMemoryCache","createMuiTheme","palette","type","primary","main","secondary","tonalOffset","ReactDOM","render","CssBaseline","ThemeProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","sec","dark","normal"],"mappings":"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","file":"static/js/main.b4441439.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { color, font } from '../../constants';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Hidden from '@material-ui/core/Hidden';\nimport { useTheme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useScroll } from '../../hooks';\n\nconst Header = styled.header`\n  background-color: ${({ movil, down }) => movil ? color.prim : down ? color.prim : 'transparent'};\n  transition: .5s ease;\n  position: fixed;\n  z-index: 100;\n  width: 100%;\n  top: 0;\n  left: 0;\n  color: ${({ movil, down }) => movil ? color.light : down ? color.light : color.phanton};\n`\nconst Logo = styled.a`\n  display: inline-block;\n  padding: .5rem 0;\n  font-family: ${font.title};\n  text-decoration: none;\n  font-size: 1.2rem;\n  user-select: none;\n  cursor: pointer;\n  &:visited{\n    color: ${color.light};\n  }\n  &:hover{\n    color: ${color.light};\n  }\n`\nconst MenuButton = styled.button`\n  background: transparent;\n  border: none;\n  outline: none;\n  padding: .2rem;\n  cursor: pointer;\n  color: ${color.light};\n  transition: .5s ease;\n  &:hover{\n    background: ${color.light};\n    color: ${color.prim};\n  }\n`\n\nexport default ({ onDrawer })=> {\n  const theme = useTheme();\n  const isMovil = useMediaQuery(theme.breakpoints.down('sm'));\n  const scroll = useScroll();\n  return(\n    <Header movil={isMovil} down={scroll}>\n      <Container maxWidth=\"md\">\n        <Grid container\n          justify=\"space-between\"\n          alignItems=\"center\"\n        >\n          <Grid item>\n            <Logo>Spicy</Logo>\n          </Grid>\n          <Grid item>\n            <Hidden smUp>\n              <MenuButton onClick={onDrawer} movil={isMovil} down={scroll}>\n                <MenuIcon />\n              </MenuButton>\n            </Hidden>\n          </Grid>\n        </Grid>\n      </Container>\n    </Header>\n  )\n}\n","import { useState, useEffect } from 'react';\n\nexport default () => {\n  const [down, setDown] = useState(false);\n\n  const handleScroll = () => {\n    if(window.scrollY > 30) {\n      setDown(true);\n    } else {\n      setDown(false);\n    }\n  }\n\n  useEffect(()=> {\n    window.addEventListener('scroll', handleScroll);\n    return ()=> window.removeEventListener('scroll', handleScroll);\n  });\n  return down;\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { withRouter } from 'react-router';\nimport styled from 'styled-components';\nimport { color, font } from '../constants';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport AboutIcon from '@material-ui/icons/Info';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport IconButton from '@material-ui/core/IconButton';\nimport Divider from '@material-ui/core/Divider';\nimport ServiceIcon from '@material-ui/icons/RoomService';\nimport ContentIcon from '@material-ui/icons/PhotoCamera';\nimport ContactIcon from '@material-ui/icons/Mail';\nimport LegalIcon from '@material-ui/icons/AssignmentTurnedIn';\n//import LoginIcon from '@material-ui/icons/AccountCircle';\nimport RegisterIcon from '@material-ui/icons/PersonAdd';\n\nconst MenuContainer = styled.div`\n  background-color: transparent;\n  width: 70vw;\n  padding: .2rem;\n`\n\nconst Title = styled.h2`\n  font-family: ${font.title};\n  color: ${color.prim};\n  margin: 0;\n`\n\nconst SubTitle = styled.p`\n  font-size: 11px;\n  color: ${color.prim};\n  margin: 0;\n`\n\nconst SpicyLink = styled.a`\n  text-decoration: none;\n  color: #fff;\n  &:visited{\n    text-decoration: none;\n    color: #fff;\n  }\n`\nconst NoLink = styled.span`\n  text-decoration: none;\n  color: #fff;\n`\n\nconst nav = [\n  {\n    id: \"#about\",\n    name: \"Nosotros\",\n    icon: ()=> <AboutIcon />\n  },\n  {\n    id: \"#service\",\n    name: \"Servicios\",\n    icon: ()=> <ServiceIcon />\n  },\n  {\n    id: \"#content\",\n    name: \"Contenido\",\n    icon: ()=> <ContentIcon />\n  },\n  {\n    id: \"#contact\",\n    name: \"Contacto\",\n    icon: ()=> <ContactIcon />\n  },\n  {\n    id: \"#legal\",\n    name: \"Legal\",\n    icon: ()=> <LegalIcon />\n  },\n]\n\nexport default withRouter(({ onClose })=> {\n\n  return(\n    <MenuContainer>\n      <List>\n        <ListItem>\n          <div>\n          <Title>\n            Spicy\n          </Title>\n          <SubTitle>\n            Encuentra a tu acompa√±ante ideal.\n          </SubTitle>\n          </div>\n          <IconButton onClick={onClose}>\n            <ChevronRightIcon style={{ color: color.prim }} />\n          </IconButton>\n        </ListItem>\n        <Divider />\n        {\n          nav.map(item => (\n            <ListItem key={item.id}>\n              <ListItemIcon>\n                {item.icon()}\n              </ListItemIcon>\n              <ListItemText>\n                <SpicyLink href={item.id}>{item.name}</SpicyLink>\n              </ListItemText>\n            </ListItem>\n          ))\n        }\n        <Divider />\n        <ListItem>\n          <ListItemIcon>\n            <RegisterIcon />\n          </ListItemIcon>\n          <ListItemText>\n            <Link to=\"/register\">\n              <NoLink>\n                Registro\n              </NoLink>\n            </Link>\n          </ListItemText>\n        </ListItem>\n      </List>\n    </MenuContainer>\n  )\n});\n","import React, { Suspense, lazy, useEffect, useState } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport NProgress from 'nprogress';\nimport './styles/nprogress.css';\nimport Header from './components/header/header';\nimport Drawer from '@material-ui/core/Drawer';\nimport DrawerMenu from './components/drawerMenu';\n\nconst Loader = () => {\n  useEffect(()=> {\n    NProgress.start();\n    return ()=> NProgress.done();\n  },[]);\n  return <p />\n}\n\nconst Home = lazy(()=> import('./pages/home'));\n\nfunction App() {\n  const [drawer, setDrawer] = useState(false);\n\n  return (\n    <div>\n      <Header onDrawer={()=> setDrawer(true)}/>\n      <div>\n        <Drawer anchor=\"right\" open={drawer} onClose={()=> setDrawer(false)}>\n          <DrawerMenu onClose={()=>setDrawer(false)} />\n        </Drawer>\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n          </Switch>\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ApolloClient } from 'apollo-client';\nimport { ApolloLink } from 'apollo-link';\nimport { onError } from 'apollo-link-error';\nimport { createUploadLink } from 'apollo-upload-client';\nimport { InMemoryCache } from 'apollo-cache-inmemory';\n\nconst client = new ApolloClient({\n  link: ApolloLink.from([\n    onError(({ graphQLErrors, networkError }) => {\n      if (graphQLErrors)\n        graphQLErrors.forEach(({ message, locations, path }) =>\n          console.log(\n            `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`,\n          ),\n        );\n      if (networkError) console.log(`[Network error]: ${networkError}`);\n    }),\n    new createUploadLink({\n      uri: 'http://localhost:4000',\n    })\n  ]),\n  cache: new InMemoryCache()\n});\n\nexport default client;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport client from './apollo-client';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette:{\n    type: \"dark\",\n    primary:{\n      main: \"#ff0161\"\n    },\n    secondary:{\n      main: \"#d32f6f\"\n    },\n    tonalOffset: 0.020\n  }\n})\n\nReactDOM.render(\n  <BrowserRouter>\n      <ApolloProvider client={client}>\n        <CssBaseline />\n        <ThemeProvider theme={theme}>\n          <App />\n        </ThemeProvider>\n      </ApolloProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","export const color = {\n  prim: \"#ff0161\",\n  sec: \"#d32f6f\",\n  light: \"#ffffff\",\n  dark: \"#333333\",\n  phanton: \"rgba(255, 255, 255, .5)\",\n};\n\nexport const font = {\n  title: 'Archivo Black',\n  normal: 'Lato',\n}\n"],"sourceRoot":""}